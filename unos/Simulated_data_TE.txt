simulWeib.nonlin <- function(N)
{set.seed(100)
  # covariates
  X <- matrix(sample(c(0,1),size=4*N, replace=T),ncol=4)
  
  # Weibull latent event times
  Ltime1 <- rweibull(n=N, scale=20 + 5*(X[,1] + X[,2] + X[,3] + X[,4]), shape=1)
  Ltime0 <- rweibull(n=N, scale=exp(3+0.1*(X[,1] + X[,2] + X[,3]) + X[,4]), shape=2)
  
  # censoring times
  C1 <- rexp(n=N, rate=0.007)
  C0 <- rexp(n=N, rate=0.007)
  #C1 <- rweibull(n=N, scale=23 + 4.5*(X[,1] + X[,2] + X[,3] + 10*X[,4]), shape=0.7+1.3*X[,4])
  #C0 <- rweibull(n=N, scale=28 + 4.5*(X[,1] + X[,2] + X[,3] + 10*X[,4]), shape=0.7+1.3*X[,4])
  
  # follow-up times and event indicators
  time1 <- pmin(Ltime1, C1) + runif(N)
  time0 <- pmin(Ltime0, C0) + runif(N)
  status1 <- as.numeric(Ltime1 <= C1)
  status0 <- as.numeric(Ltime0 <= C0)
  
  # treatment assignment
  propensity <- 1/(1+exp(-0.5*(X[,1]+X[,2]+X[,3]+X[,4])))
  treatment = numeric(N)
  for (i in 1:N){
    treatment[i] = sample(c(1,0),size=1,replace=T,prob=c(propensity[i]-0.25, 1.25 - propensity[i]))}
  
  time = numeric(N)
  time[which(treatment == 1)] = time1[which(treatment == 1)]
  time[which(treatment == 0)] = time0[which(treatment == 0)]
  
  status = numeric(N)
  status[which(treatment == 1)] = status1[which(treatment == 1)]
  status[which(treatment == 0)] = status0[which(treatment == 0)]
  
  # data set
  data.frame(id=1:N,
             time=ceiling(time),status=status, treatment=treatment,
             X=X)
}

data <- simulWeib.nonlin(300)